kind: pipeline
type: vm
name: testing
platform:
  os: linux
  arch: amd64
pool:
  use: ubuntu

steps:
  - name: lint
    image: golang:1.22.4
    pull: always
    commands:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
      - golangci-lint version
      - golangci-lint run --timeout=300s
    volumes:
      - name: gopath
        path: "/go"
  - name: test
    image: golang:1.22.4
    commands:
      - go test -cover ./...
    volumes:
      - name: gopath
        path: "/go"
volumes:
  - name: gopath
    temp: {}
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
type: vm
name: linux-amd64
platform:
  os: linux
  arch: amd64
pool:
  use: ubuntu

steps:
  - name: environment
    image: golang:1.22.4
    pull: always
    environment:
      CGO_ENABLED: "0"
    commands:
      - go version
      - go env
  - name: build
    image: golang:1.22.4
    environment:
      CGO_ENABLED: "0"
    commands:
      - go build -v -ldflags "-X main.version=" -a -tags netgo -o release/linux/amd64/drone-s3 .
  - name: docker
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile.linux.amd64
      repo: plugins/s3
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: linux-amd64
depends_on:
  - testing
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
type: vm
name: linux-arm64
platform:
  os: linux
  arch: arm64
pool:
  use: ubuntu_arm64

steps:
  - name: environment
    image: golang:1.22.4
    pull: always
    environment:
      CGO_ENABLED: "0"
    commands:
      - go version
      - go env
  - name: build
    image: golang:1.22.4
    environment:
      CGO_ENABLED: "0"
    commands:
      - go build -v -ldflags "-X main.version=" -a -tags netgo -o release/linux/arm64/drone-s3 .
  - name: docker
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile.linux.arm64
      repo: plugins/s3
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: linux-arm64
depends_on:
  - testing
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
type: vm
name: windows-1809
platform:
  os: windows
  arch: amd64
pool:
  use: windows

steps:
  - name: environment
    image: golang:1.22.4
    pull: always
    environment:
      CGO_ENABLED: "0"
    commands:
      - go version
      - go env
  - name: build
    image: golang:1.22.4
    environment:
      CGO_ENABLED: "0"
    commands:
      - go build -v -ldflags "-X main.version=" -a -tags netgo -o release/windows/amd64/drone-s3.exe .
  - name: docker
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile.windows.1809
      repo: plugins/s3
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: windows-1809-amd64
      daemon_off: true
      purge: false
    when:
      ref:
        - refs/heads/master
        - refs/tags/**
depends_on:
  - testing
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
type: vm
name: windows-ltsc2022
platform:
  os: windows
  arch: amd64
pool:
  use: windows-2022

steps:
  - name: environment
    image: golang:1.22.4
    pull: always
    environment:
      CGO_ENABLED: "0"
    commands:
      - go version
      - go env
  - name: build
    image: golang:1.22.4
    environment:
      CGO_ENABLED: "0"
    commands:
      - go build -v -ldflags "-X main.version=" -a -tags netgo -o release/windows/amd64/drone-s3.exe .
  - name: docker
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile.windows.ltsc2022
      repo: plugins/s3
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: windows-ltsc2022-amd64
      daemon_off: true
      purge: false
    when:
      ref:
        - refs/heads/master
        - refs/tags/**
depends_on:
  - testing
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
type: vm
name: manifest
platform:
  os: linux
  arch: amd64
pool:
  use: ubuntu

steps:
  - name: manifest
    image: plugins/manifest
    settings:
      auto_tag: "true"
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      spec: docker/manifest.tmpl
      ignore_missing: true
depends_on:
  - linux-amd64
  - linux-arm64
  - windows-1809
  - windows-ltsc2022
trigger:
  ref:
    - refs/heads/master
    - refs/tags/**

---

kind: pipeline
type: vm

pool:
  use: ubuntu

steps:
  - name: build
    pull: always
    image: golang:1.22.4
    commands:
      - GOOS=linux   GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-s3-linux-amd64
      - GOOS=linux   GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-s3-linux-arm64
      - GOOS=darwin  GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-s3-darwin-amd64
      - GOOS=darwin  GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-s3-darwin-arm64
      - GOOS=windows GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-s3-windows-amd64

    environment:
      CGO_ENABLED: 0
      GO111MODULE: on

  - name: zstd-compress
    commands:
      - sudo apt-get update -y
      - sudo apt-get install -y zstd
      - zstd release/drone-s3-linux-amd64
      - zstd release/drone-s3-linux-arm64
      - zstd release/drone-s3-darwin-arm64
      - zstd release/drone-s3-darwin-amd64
      - zstd release/drone-s3-windows-amd64

  - name: release
    image: plugins/github-release
    settings:
      files:
        - release/drone-s3-linux-amd64.zst
        - release/drone-s3-linux-arm64.zst
        - release/drone-s3-darwin-arm64.zst
        - release/drone-s3-darwin-amd64.zst
        - release/drone-s3-windows-amd64.zst
      api_key:
        from_secret: cireporunner_github_token
    when:
      event:
      - tag
depends_on:
  - linux-amd64
  - linux-arm64
  - windows-1809
  - windows-ltsc2022
